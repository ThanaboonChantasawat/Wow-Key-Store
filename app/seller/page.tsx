"use client"

import { useState, useEffect } from "react"
import { SellerDashboard } from "@/components/sellerdashboard/seller-dashboard"
import { CreateShopForm } from "@/components/sellerdashboard/create-shop-form"
import { useAuth } from "@/components/auth-context"
import { getShopByOwnerId, type Shop } from "@/lib/shop-service"
import { getUserProfile, type UserProfile } from "@/lib/user-service"
import { AlertCircle, Clock, XCircle, CheckCircle2, Ban } from "lucide-react"
import { Button } from "@/components/ui/button"

export default function SellerPage() {
  const { user, isInitialized } = useAuth()
  const [shop, setShop] = useState<Shop | null>(null)
  const [loading, setLoading] = useState(true)
  const [isEditing, setIsEditing] = useState(false)
  const [verifierProfile, setVerifierProfile] = useState<UserProfile | null>(null)

  useEffect(() => {
    const checkShop = async () => {
      if (!user) {
        setLoading(false)
        return
      }

      try {
        const shopData = await getShopByOwnerId(user.uid)
        setShop(shopData)
        
        // Load verifier profile if shop was verified/rejected
        if (shopData?.verifiedBy) {
          const profile = await getUserProfile(shopData.verifiedBy)
          setVerifierProfile(profile)
        }
      } catch (error) {
        console.error("Error checking shop:", error)
      } finally {
        setLoading(false)
      }
    }

    if (isInitialized) {
      checkShop()
    }
  }, [user, isInitialized])

  const handleShopCreated = () => {
    // Reload shop data
    setIsEditing(false)
    if (user) {
      getShopByOwnerId(user.uid).then(setShop)
    }
  }

  // Loading state
  if (!isInitialized || loading) {
    return (
      <div className="flex flex-col bg-[#f2f2f4] items-center justify-center py-20">
        <div className="animate-spin rounded-full h-12 w-12 border-b-2 border-[#ff9800] mb-4"></div>
        <p className="text-gray-600">‡∏Å‡∏≥‡∏•‡∏±‡∏á‡πÇ‡∏´‡∏•‡∏î...</p>
      </div>
    )
  }

  // Not logged in
  if (!user) {
    return (
      <div className="flex flex-col bg-[#f2f2f4] py-20">
        <div className="flex items-center justify-center px-4">
          <div className="bg-white rounded-2xl shadow-lg p-12 text-center max-w-md">
            <div className="w-20 h-20 bg-red-100 rounded-full flex items-center justify-center mx-auto mb-4">
              <AlertCircle className="w-10 h-10 text-red-600" />
            </div>
            <h2 className="text-2xl font-bold text-[#292d32] mb-2">‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡πÄ‡∏Ç‡πâ‡∏≤‡∏™‡∏π‡πà‡∏£‡∏∞‡∏ö‡∏ö</h2>
            <p className="text-gray-600 mb-6">‡∏Ñ‡∏∏‡∏ì‡∏ï‡πâ‡∏≠‡∏á‡πÄ‡∏Ç‡πâ‡∏≤‡∏™‡∏π‡πà‡∏£‡∏∞‡∏ö‡∏ö‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÄ‡∏Ç‡πâ‡∏≤‡∏ñ‡∏∂‡∏á‡∏´‡∏ô‡πâ‡∏≤‡∏ô‡∏µ‡πâ</p>
          </div>
        </div>
      </div>
    )
  }

  // No shop yet - show create shop form
  if (!shop || isEditing) {
    return (
      <div className="flex flex-col bg-[#f2f2f4]">
        <CreateShopForm userId={user.uid} onShopCreated={handleShopCreated} existingShop={isEditing ? shop : null} />
      </div>
    )
  }

  // Shop is pending verification
  if (shop.status === 'pending') {
    return (
      <div className="flex flex-col bg-[#f2f2f4] items-center justify-center py-20 px-4">
        <div className="bg-white rounded-2xl shadow-lg p-12 text-center max-w-2xl">
          <div className="w-20 h-20 bg-gradient-to-br from-yellow-400 to-yellow-500 rounded-full flex items-center justify-center mx-auto mb-4">
            <Clock className="w-10 h-10 text-white" />
          </div>
          <h2 className="text-3xl font-bold text-[#292d32] mb-3">‡∏£‡πâ‡∏≤‡∏ô‡∏Ñ‡πâ‡∏≤‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏∏‡∏ì‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏£‡∏≠‡∏Å‡∏≤‡∏£‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö</h2>
          <p className="text-gray-600 mb-6 text-lg">
            Admin ‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏£‡πâ‡∏≤‡∏ô‡∏Ñ‡πâ‡∏≤‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏∏‡∏ì<br />
            ‡πÇ‡∏î‡∏¢‡∏ó‡∏±‡πà‡∏ß‡πÑ‡∏õ‡∏à‡∏∞‡πÉ‡∏ä‡πâ‡πÄ‡∏ß‡∏•‡∏≤ 24-48 ‡∏ä‡∏±‡πà‡∏ß‡πÇ‡∏°‡∏á
          </p>
          
          <div className="bg-gradient-to-r from-blue-50 to-cyan-50 border border-blue-200 rounded-xl p-6 mb-6">
            <div className="flex items-start gap-3 text-left">
              <CheckCircle2 className="w-6 h-6 text-blue-600 flex-shrink-0 mt-1" />
              <div>
                <h3 className="font-semibold text-blue-900 mb-2 text-lg">‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏£‡πâ‡∏≤‡∏ô‡∏Ñ‡πâ‡∏≤‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏∏‡∏ì:</h3>
                <div className="space-y-2 text-blue-800">
                  <p><span className="font-medium">‡∏ä‡∏∑‡πà‡∏≠‡∏£‡πâ‡∏≤‡∏ô:</span> {shop.shopName}</p>
                  {shop.contactEmail && <p><span className="font-medium">‡∏≠‡∏µ‡πÄ‡∏°‡∏•:</span> {shop.contactEmail}</p>}
                  {shop.contactPhone && <p><span className="font-medium">‡πÄ‡∏ö‡∏≠‡∏£‡πå‡πÇ‡∏ó‡∏£:</span> {shop.contactPhone}</p>}
                  {shop.facebookUrl && <p><span className="font-medium">Facebook:</span> ‚úì ‡∏£‡∏∞‡∏ö‡∏∏‡πÅ‡∏•‡πâ‡∏ß</p>}
                  {shop.lineId && <p><span className="font-medium">Line ID:</span> {shop.lineId}</p>}
                  <p className="text-sm text-blue-600 mt-3">
                    ‡∏™‡πà‡∏á‡∏Ñ‡∏≥‡∏Ç‡∏≠‡πÄ‡∏°‡∏∑‡πà‡∏≠: {shop.createdAt.toLocaleDateString('th-TH')} {shop.createdAt.toLocaleTimeString('th-TH')}
                  </p>
                </div>
              </div>
            </div>
          </div>

          <div className="flex flex-col sm:flex-row gap-3 justify-center">
            <Button
              onClick={() => window.location.reload()}
              variant="outline"
              className="border-[#ff9800] text-[#ff9800] hover:bg-[#ff9800] hover:text-white px-6"
            >
              ‡∏£‡∏µ‡πÄ‡∏ü‡∏£‡∏ä‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞
            </Button>
            <Button
              onClick={() => window.location.href = '/'}
              className="bg-gradient-to-r from-[#ff9800] to-[#f57c00] hover:from-[#e08800] hover:to-[#d56600] text-white px-6"
            >
              ‡∏Å‡∏•‡∏±‡∏ö‡∏´‡∏ô‡πâ‡∏≤‡∏´‡∏•‡∏±‡∏Å
            </Button>
          </div>
        </div>
      </div>
    )
  }

  // Shop is suspended - cannot access dashboard
  if (shop.status === 'suspended') {
    return (
      <div className="flex flex-col bg-[#f2f2f4] items-center justify-center py-20 px-4">
        <div className="bg-white rounded-2xl shadow-lg p-12 text-center max-w-2xl">
          <div className="w-20 h-20 bg-gradient-to-br from-orange-500 to-orange-600 rounded-full flex items-center justify-center mx-auto mb-4">
            <Ban className="w-10 h-10 text-white" />
          </div>
          <h2 className="text-3xl font-bold text-[#292d32] mb-3">‡∏£‡πâ‡∏≤‡∏ô‡∏Ñ‡πâ‡∏≤‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏∏‡∏ì‡∏ñ‡∏π‡∏Å‡∏£‡∏∞‡∏á‡∏±‡∏ö‡∏Å‡∏≤‡∏£‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô</h2>
          <p className="text-gray-600 mb-6 text-lg">
            Admin ‡πÑ‡∏î‡πâ‡∏ó‡∏≥‡∏Å‡∏≤‡∏£‡∏£‡∏∞‡∏á‡∏±‡∏ö‡∏£‡πâ‡∏≤‡∏ô‡∏Ñ‡πâ‡∏≤‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏∏‡∏ì‡∏ä‡∏±‡πà‡∏ß‡∏Ñ‡∏£‡∏≤‡∏ß ‡∏Ñ‡∏∏‡∏ì‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡πÄ‡∏Ç‡πâ‡∏≤‡∏ñ‡∏∂‡∏á Dashboard ‡πÑ‡∏î‡πâ
          </p>
          
          {shop.suspensionReason && (
            <div className="bg-orange-50 border border-orange-200 rounded-xl p-6 mb-6">
              <div className="flex items-start gap-3 text-left">
                <AlertCircle className="w-6 h-6 text-orange-600 flex-shrink-0 mt-1" />
                <div>
                  <h3 className="font-semibold text-orange-900 mb-2 text-lg">‡πÄ‡∏´‡∏ï‡∏∏‡∏ú‡∏•‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏£‡∏∞‡∏á‡∏±‡∏ö:</h3>
                  <p className="text-orange-800">{shop.suspensionReason}</p>
                  {shop.suspendedBy && shop.suspendedAt && (
                    <p className="text-sm text-orange-600 mt-3">
                      ‡∏£‡∏∞‡∏á‡∏±‡∏ö‡πÇ‡∏î‡∏¢: Admin ‡πÄ‡∏°‡∏∑‡πà‡∏≠ {shop.suspendedAt.toLocaleDateString('th-TH')} {shop.suspendedAt.toLocaleTimeString('th-TH')}
                    </p>
                  )}
                </div>
              </div>
            </div>
          )}

          <div className="bg-gradient-to-r from-blue-50 to-cyan-50 border border-blue-200 rounded-xl p-6 mb-6">
            <div className="text-left">
              <h3 className="font-semibold text-blue-900 mb-2 text-lg">‡πÅ‡∏ô‡∏∞‡∏ô‡∏≥:</h3>
              <ul className="list-disc list-inside space-y-1 text-blue-800">
                <li>‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡πÄ‡∏´‡∏ï‡∏∏‡∏ú‡∏•‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏£‡∏∞‡∏á‡∏±‡∏ö‡∏≠‡∏¢‡πà‡∏≤‡∏á‡∏•‡∏∞‡πÄ‡∏≠‡∏µ‡∏¢‡∏î</li>
                <li>‡∏ï‡∏¥‡∏î‡∏ï‡πà‡∏≠ Admin ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏™‡∏≠‡∏ö‡∏ñ‡∏≤‡∏°‡∏£‡∏≤‡∏¢‡∏•‡∏∞‡πÄ‡∏≠‡∏µ‡∏¢‡∏î‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÄ‡∏ï‡∏¥‡∏°</li>
                <li>‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡∏õ‡∏±‡∏ç‡∏´‡∏≤‡∏ó‡∏µ‡πà‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡∏∂‡πâ‡∏ô‡∏Å‡πà‡∏≠‡∏ô‡∏Ç‡∏≠‡πÄ‡∏õ‡∏¥‡∏î‡∏£‡πâ‡∏≤‡∏ô‡πÉ‡∏´‡∏°‡πà</li>
                <li>‡∏£‡∏≠‡∏Å‡∏≤‡∏£‡∏û‡∏¥‡∏à‡∏≤‡∏£‡∏ì‡∏≤‡∏à‡∏≤‡∏Å Admin</li>
              </ul>
            </div>
          </div>

          <div className="flex flex-col sm:flex-row gap-3 justify-center">
            <Button
              onClick={() => window.location.href = '/reopen-shop'}
              className="bg-gradient-to-r from-[#ff9800] to-[#f57c00] hover:from-[#e08800] hover:to-[#d56600] text-white px-8 py-6 text-lg font-bold shadow-lg hover:shadow-xl transition-all"
            >
              üìß ‡∏Ç‡∏≠‡πÄ‡∏õ‡∏¥‡∏î‡∏£‡πâ‡∏≤‡∏ô‡πÉ‡∏´‡∏°‡πà
            </Button>
            <Button
              onClick={() => window.location.href = '/'}
              variant="outline"
              className="px-6 py-6 text-lg"
            >
              ‡∏Å‡∏•‡∏±‡∏ö‡∏´‡∏ô‡πâ‡∏≤‡∏´‡∏•‡∏±‡∏Å
            </Button>
          </div>
        </div>
      </div>
    )
  }

  // Shop is rejected
  if (shop.status === 'rejected') {
    return (
      <div className="flex flex-col bg-[#f2f2f4] items-center justify-center py-20 px-4">
        <div className="bg-white rounded-2xl shadow-lg p-12 text-center max-w-2xl">
          <div className="w-20 h-20 bg-gradient-to-br from-red-500 to-red-600 rounded-full flex items-center justify-center mx-auto mb-4">
            <XCircle className="w-10 h-10 text-white" />
          </div>
          <h2 className="text-3xl font-bold text-[#292d32] mb-3">‡∏£‡πâ‡∏≤‡∏ô‡∏Ñ‡πâ‡∏≤‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏∏‡∏ì‡πÑ‡∏°‡πà‡∏ú‡πà‡∏≤‡∏ô‡∏Å‡∏≤‡∏£‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö</h2>
          <p className="text-gray-600 mb-6 text-lg">
            Admin ‡πÑ‡∏î‡πâ‡∏ó‡∏≥‡∏Å‡∏≤‡∏£‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡πÅ‡∏•‡∏∞‡∏û‡∏ö‡∏õ‡∏±‡∏ç‡∏´‡∏≤‡∏Å‡∏±‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏£‡πâ‡∏≤‡∏ô‡∏Ñ‡πâ‡∏≤‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏∏‡∏ì
          </p>
          
          {shop.rejectionReason && (
            <div className="bg-red-50 border border-red-200 rounded-xl p-6 mb-6">
              <div className="flex items-start gap-3 text-left">
                <AlertCircle className="w-6 h-6 text-red-600 flex-shrink-0 mt-1" />
                <div>
                  <h3 className="font-semibold text-red-900 mb-2 text-lg">‡πÄ‡∏´‡∏ï‡∏∏‡∏ú‡∏•‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏õ‡∏è‡∏¥‡πÄ‡∏™‡∏ò:</h3>
                  <p className="text-red-800">{shop.rejectionReason}</p>
                  {shop.verifiedBy && shop.verifiedAt && (
                    <p className="text-sm text-red-600 mt-3">
                      ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡πÇ‡∏î‡∏¢: Admin {verifierProfile?.displayName || verifierProfile?.email || shop.verifiedBy} ‡πÄ‡∏°‡∏∑‡πà‡∏≠ {shop.verifiedAt.toLocaleDateString('th-TH')} {shop.verifiedAt.toLocaleTimeString('th-TH')}
                    </p>
                  )}
                </div>
              </div>
            </div>
          )}

          <div className="bg-gradient-to-r from-blue-50 to-cyan-50 border border-blue-200 rounded-xl p-6 mb-6">
            <div className="text-left">
              <h3 className="font-semibold text-blue-900 mb-2 text-lg">‡πÅ‡∏ô‡∏∞‡∏ô‡∏≥:</h3>
              <ul className="list-disc list-inside space-y-1 text-blue-800">
                <li>‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡πÅ‡∏•‡∏∞‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ï‡∏≤‡∏°‡∏ó‡∏µ‡πà‡∏£‡∏∞‡∏ö‡∏∏</li>
                <li>‡∏ï‡∏¥‡∏î‡∏ï‡πà‡∏≠ Admin ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏Ç‡∏≠‡∏Ñ‡∏≥‡πÅ‡∏ô‡∏∞‡∏ô‡∏≥‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÄ‡∏ï‡∏¥‡∏°</li>
                <li>‡∏¢‡∏∑‡πà‡∏ô‡∏Ñ‡∏≥‡∏Ç‡∏≠‡πÉ‡∏´‡∏°‡πà‡∏û‡∏£‡πâ‡∏≠‡∏°‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ó‡∏µ‡πà‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á</li>
              </ul>
            </div>
          </div>

          <div className="flex flex-col sm:flex-row gap-3 justify-center">
            <Button
              onClick={() => setIsEditing(true)}
              className="bg-gradient-to-r from-[#ff9800] to-[#f57c00] hover:from-[#e08800] hover:to-[#d56600] text-white px-6"
            >
              ‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡πÅ‡∏•‡∏∞‡∏™‡πà‡∏á‡πÉ‡∏´‡∏°‡πà
            </Button>
            <Button
              onClick={() => window.location.href = '/'}
              variant="outline"
              className="px-6"
            >
              ‡∏Å‡∏•‡∏±‡∏ö‡∏´‡∏ô‡πâ‡∏≤‡∏´‡∏•‡∏±‡∏Å
            </Button>
          </div>
        </div>
      </div>
    )
  }

  // Shop is active/verified - show dashboard
  if (shop.status === 'active') {
    return (
      <div className="flex flex-col bg-[#f2f2f4]">
        <SellerDashboard />
      </div>
    )
  }

  // Unknown status - redirect to home
  return (
    <div className="flex flex-col bg-[#f2f2f4] items-center justify-center py-20 px-4">
      <div className="bg-white rounded-2xl shadow-lg p-12 text-center max-w-md">
        <div className="w-20 h-20 bg-gray-100 rounded-full flex items-center justify-center mx-auto mb-4">
          <AlertCircle className="w-10 h-10 text-gray-600" />
        </div>
        <h2 className="text-2xl font-bold text-[#292d32] mb-2">‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡∏£‡πâ‡∏≤‡∏ô‡∏Ñ‡πâ‡∏≤‡πÑ‡∏°‡πà‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á</h2>
        <p className="text-gray-600 mb-6">‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏ï‡∏¥‡∏î‡∏ï‡πà‡∏≠ Admin</p>
        <Button
          onClick={() => window.location.href = '/'}
          className="bg-gradient-to-r from-[#ff9800] to-[#f57c00] hover:from-[#e08800] hover:to-[#d56600] text-white"
        >
          ‡∏Å‡∏•‡∏±‡∏ö‡∏´‡∏ô‡πâ‡∏≤‡∏´‡∏•‡∏±‡∏Å
        </Button>
      </div>
    </div>
  )
}
